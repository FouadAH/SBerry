package sberry.DAL;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

public class Database {

	static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
	static final String DB_URL = "jdbc:mysql://localhost/sberry_db?autoReconnect=true&useSSL=false";
	static final String USER = "root";
	static final String PASS = "";
	static Connection conn = null;
	static Statement stmt = null;

	public static void connection() throws ClassNotFoundException, SQLException {
		Class.forName("com.mysql.jdbc.Driver");
		conn = DriverManager.getConnection(DB_URL, USER, PASS);
	}

	public static ResultSet verifyQuery() throws ClassNotFoundException,
			SQLException {
		String sql = "SELECT username, email, hashcode FROM user";
		ResultSet rs = queryExe(sql);
		return rs;

	}


	public static String getUsernameQuery(User user) throws SQLException {
		String username = "";
		String sql = "SELECT username FROM user" + " WHERE email = '"
				+ user.getEmail() + "'";
		ResultSet rs = queryExe(sql);
		while (rs.next()) {
			username = rs.getString("username");
		}
		return username;
	}

	public static ResultSet queryExe(String q) throws SQLException {
		stmt = conn.createStatement();
		return stmt.executeQuery(q);
	}

	public static void queryUpd(String q) throws SQLException {
		stmt = conn.createStatement();
		stmt.executeUpdate(q);
	}


	public static int selectIDQuery(User user) throws ClassNotFoundException,
			SQLException {
		String selectmail = "SELECT userid FROM user"
				+ " WHERE email = '" + user.getEmail() + "'";
		ResultSet r1 = queryExe(selectmail);
		int id = 0;
		while (r1.next()) {
			id = r1.getInt("userid");

		}
		r1.close();
		return id;
	}

	public static void insertSurveyQuery(User user, int id) throws SQLException {
		Survey survey = user.getSurvey();
		System.out.println("Attemting to insert survey into database...");
		String timeStamp = new SimpleDateFormat("yyy.MM.dd HH:mm:ss")
				.format(new Date());
		String insertsurvey = "INSERT INTO survey " + "VALUES(0, " + id + ", 1"+", '" + survey.getSurveytitle() + "', '" + timeStamp + "' , '"+survey.getSurveyLink()+"' , 0)";
		queryUpd(insertsurvey);
	}

	public static int selectSurveyIdQuery(User user) throws SQLException {
		
		Survey survey = user.getSurvey();
		String selectsurveyid = "SELECT surveyid FROM survey"
				+ " WHERE title = '" + survey.getSurveytitle() + "'";
		ResultSet r2 = queryExe(selectsurveyid);
		int surveyid = 0;
		while (r2.next()) {
			surveyid = r2.getInt("surveyid");
		}
		r2.close();
		return surveyid;
	}

	public static void insertQuestionQuery(User user, int surveyid)
			throws SQLException {
		Survey survey = user.getSurvey();
		ArrayList<Question> questions = survey.getQuestion();
		System.out.println("Inserting questions into database...");
		for (int i = 0; i < questions.size(); i++) {
			int option = 0;
			Question q = questions.get(i);
			if (q.getOptional() == true) {
				option = 1;
			} else {
				option = 0;
			}
			String insertquestion = "INSERT INTO question " + "VALUES(0, "
					+ surveyid + ", '" + q.getQtype() + "', '"
					+ q.getQuestion() + "', '" + q.getField() + "', " + option
					+ ")";
			queryUpd(insertquestion);
		}
	}
	public static void insertSurveyPermission(int premissionid, User user, String email) throws SQLException{
		String serveypermission="INSERT INTO survey_permissions (PERMISSIONID, SURVEYID, Email)" + "VALUES("+premissionid+", " + selectSurveyIdQuery(user) + ", '" + email + "')";
		queryUpd(serveypermission);
	}



}
